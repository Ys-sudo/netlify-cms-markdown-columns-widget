"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatenetlify_cms_markdown_columns_widget"]("main",{

/***/ "./dev/index.js":
/*!**********************!*\
  !*** ./dev/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n__webpack_require__(/*! ./bootstrap.js */ \"./dev/bootstrap.js\");\n\nvar _netlifyCms = __webpack_require__(/*! netlify-cms */ \"./node_modules/netlify-cms/dist/netlify-cms.js\");\n\nvar _netlifyCms2 = _interopRequireDefault(_netlifyCms);\n\n__webpack_require__(/*! netlify-cms/dist/cms.css */ \"./node_modules/netlify-cms/dist/cms.css\");\n\nvar _src = __webpack_require__(/*! ../src */ \"./src/index.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  backend: {\n    name: 'test-repo',\n    login: false\n  },\n  media_folder: 'assets',\n  collections: [{\n    name: 'test',\n    label: 'Test',\n    files: [{\n      file: 'test.yml',\n      name: 'test',\n      label: 'Test',\n      fields: [{ label: \"Body\", name: \"body\", widget: \"markdown\", editor_components: ['image', 'code-block', 'columns-layout'] }]\n    }]\n  }]\n};\n\n_netlifyCms2.default.registerEditorComponent({\n  // Internal id of the component\n  id: \"columns-layout\",\n  // Visible label\n  label: \"Columns\",\n  name: 'columns',\n  // Fields the user need to fill out when adding an instance of the component\n  fields: [{\n    name: 'class',\n    label: 'Class',\n    widget: 'string',\n    default: 'column'\n  }, {\n    name: 'content',\n    label: 'Content',\n    widget: 'markdown',\n    default: 'Lorem Ipsum...'\n  }, {\n    name: 'class2',\n    label: 'Class2',\n    widget: 'string',\n    default: 'column'\n  }, {\n    name: 'content2',\n    label: 'Content2',\n    widget: 'markdown',\n    default: 'Lorem Ipsum...'\n  }],\n  // Regex pattern used to search for instances of this block in the markdown document.\n  // Patterns are run in a multline environment (against the entire markdown document),\n  // and so generally should make use of the multiline flag (`m`). If you need to capture\n  // newlines in your capturing groups, you can either use something like\n  // `([\\S\\s]*)`, or you can additionally enable the \"dot all\" flag (`s`),\n  // which will cause `(.*)` to match newlines as well.\n  //\n  // Additionally, it's recommended that you use non-greedy capturing groups (e.g.\n  // `(.*?)` vs `(.*)`), especially if matching against newline characters.\n  pattern: /^<columns>$\\s(.*?)<\\/columns>\\n\\n/ms,\n  // Given a RegExp Match object\n  // (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match#return_value),\n  // return an object with one property for each field defined in `fields`.\n  //\n  // This is used to populate the custom widget in the markdown editor in the CMS.\n  fromBlock: function fromBlock(match) {\n    return {\n      class: match[1],\n      content: match[2],\n      class2: match[3],\n      content2: match[4]\n    };\n  },\n  // Given an object with one property for each field defined in `fields`,\n  // return the string you wish to be inserted into your markdown.\n  //\n  // This is used to serialize the data from the custom widget to the\n  // markdown document\n  toBlock: function toBlock(data) {\n    return '\\n<columns>\\n<div class=\"' + data.class + '\">' + data.content + '</div>\\n<div class=\"' + data.class2 + '\">' + data.content2 + '</div>\\n</columns>\\n';\n  },\n  // Preview output for this component. Can either be a string or a React component\n  // (component gives better render performance)\n  toPreview: function toPreview(data) {\n    return '\\n<columns>\\n  <div class=\"' + data.class + '\">' + data.content + '</div>\\n  <div class=\"' + data.class2 + '\">' + data.content2 + '</div>\\n</columns>\\n';\n  }\n});\n\n(0, _netlifyCms.init)({ config: config });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kZXYvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsU0FBUztBQUNmQyxXQUFTO0FBQ1JDLFVBQU0sV0FERTtBQUVSQyxXQUFPO0FBRkMsR0FETTtBQUtmQyxnQkFBYyxRQUxDO0FBTWZDLGVBQWEsQ0FBQztBQUNiSCxVQUFNLE1BRE87QUFFYkksV0FBTyxNQUZNO0FBR2JDLFdBQU8sQ0FBQztBQUNOQyxZQUFNLFVBREE7QUFFTk4sWUFBTSxNQUZBO0FBR05JLGFBQU8sTUFIRDtBQUlORyxjQUFRLENBQ04sRUFBQ0gsT0FBTyxNQUFSLEVBQWdCSixNQUFNLE1BQXRCLEVBQThCUSxRQUFRLFVBQXRDLEVBQWlEQyxtQkFBa0IsQ0FBQyxPQUFELEVBQVMsWUFBVCxFQUFzQixnQkFBdEIsQ0FBbkUsRUFETTtBQUpGLEtBQUQ7QUFITSxHQUFEO0FBTkUsQ0FBZjs7QUFvQkFDLHFCQUFJQyx1QkFBSixDQUE0QjtBQUMxQjtBQUNBQyxNQUFJLGdCQUZzQjtBQUcxQjtBQUNBUixTQUFPLFNBSm1CO0FBSzFCSixRQUFNLFNBTG9CO0FBTTFCO0FBQ0FPLFVBQVEsQ0FDTjtBQUNFUCxVQUFNLE9BRFI7QUFFRUksV0FBTyxPQUZUO0FBR0VJLFlBQVEsUUFIVjtBQUlFSyxhQUFRO0FBSlYsR0FETSxFQU9OO0FBQ0ViLFVBQU0sU0FEUjtBQUVFSSxXQUFPLFNBRlQ7QUFHRUksWUFBUSxVQUhWO0FBSUVLLGFBQVE7QUFKVixHQVBNLEVBYU47QUFDRWIsVUFBTSxRQURSO0FBRUVJLFdBQU8sUUFGVDtBQUdFSSxZQUFRLFFBSFY7QUFJRUssYUFBUTtBQUpWLEdBYk0sRUFtQk47QUFDRWIsVUFBTSxVQURSO0FBRUVJLFdBQU8sVUFGVDtBQUdFSSxZQUFRLFVBSFY7QUFJRUssYUFBUTtBQUpWLEdBbkJNLENBUGtCO0FBaUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsV0FBUyxxQ0ExQ2lCO0FBMkMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLGFBQVcsbUJBQVNDLEtBQVQsRUFBZ0I7QUFDekIsV0FBTztBQUNMQyxhQUFPRCxNQUFNLENBQU4sQ0FERjtBQUVMRSxlQUFTRixNQUFNLENBQU4sQ0FGSjtBQUdMRyxjQUFRSCxNQUFNLENBQU4sQ0FISDtBQUlMSSxnQkFBVUosTUFBTSxDQUFOO0FBSkwsS0FBUDtBQU1ELEdBdkR5QjtBQXdEMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBSyxXQUFTLGlCQUFTQyxJQUFULEVBQWU7QUFDdEIseUNBRVVBLEtBQUtMLEtBRmYsVUFFeUJLLEtBQUtKLE9BRjlCLDRCQUdVSSxLQUFLSCxNQUhmLFVBRzBCRyxLQUFLRixRQUgvQjtBQU1ELEdBcEV5QjtBQXFFMUI7QUFDQTtBQUNBRyxhQUFXLG1CQUFTRCxJQUFULEVBQWU7QUFDeEIsMkNBRVlBLEtBQUtMLEtBRmpCLFVBRTJCSyxLQUFLSixPQUZoQyw4QkFHWUksS0FBS0gsTUFIakIsVUFHNEJHLEtBQUtGLFFBSGpDO0FBTUQ7QUE5RXlCLENBQTVCOztBQWtGQSxzQkFBSyxFQUFFdEIsY0FBRixFQUFMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV0bGlmeS1jbXMtbWFya2Rvd24tY29sdW1ucy13aWRnZXQvLi9kZXYvaW5kZXguanM/MjAwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vYm9vdHN0cmFwLmpzJ1xuaW1wb3J0IENNUywgeyBpbml0IH0gZnJvbSAnbmV0bGlmeS1jbXMnXG5pbXBvcnQgJ25ldGxpZnktY21zL2Rpc3QvY21zLmNzcydcbmltcG9ydCB7IENvbnRyb2wsIFByZXZpZXcgfSBmcm9tICcuLi9zcmMnXG5cbmNvbnN0IGNvbmZpZyA9IHtcbmJhY2tlbmQ6IHtcbiBuYW1lOiAndGVzdC1yZXBvJyxcbiBsb2dpbjogZmFsc2UsXG59LFxubWVkaWFfZm9sZGVyOiAnYXNzZXRzJyxcbmNvbGxlY3Rpb25zOiBbe1xuIG5hbWU6ICd0ZXN0JyxcbiBsYWJlbDogJ1Rlc3QnLFxuIGZpbGVzOiBbe1xuICAgZmlsZTogJ3Rlc3QueW1sJyxcbiAgIG5hbWU6ICd0ZXN0JyxcbiAgIGxhYmVsOiAnVGVzdCcsXG4gICBmaWVsZHM6IFtcbiAgICAge2xhYmVsOiBcIkJvZHlcIiwgbmFtZTogXCJib2R5XCIsIHdpZGdldDogXCJtYXJrZG93blwiLGVkaXRvcl9jb21wb25lbnRzOlsnaW1hZ2UnLCdjb2RlLWJsb2NrJywnY29sdW1ucy1sYXlvdXQnXX0sXG4gICBdLFxuIH1dLFxufV0sXG59XG5cbkNNUy5yZWdpc3RlckVkaXRvckNvbXBvbmVudCh7XG4gIC8vIEludGVybmFsIGlkIG9mIHRoZSBjb21wb25lbnRcbiAgaWQ6IFwiY29sdW1ucy1sYXlvdXRcIixcbiAgLy8gVmlzaWJsZSBsYWJlbFxuICBsYWJlbDogXCJDb2x1bW5zXCIsXG4gIG5hbWU6ICdjb2x1bW5zJyxcbiAgLy8gRmllbGRzIHRoZSB1c2VyIG5lZWQgdG8gZmlsbCBvdXQgd2hlbiBhZGRpbmcgYW4gaW5zdGFuY2Ugb2YgdGhlIGNvbXBvbmVudFxuICBmaWVsZHM6IFtcbiAgICB7XG4gICAgICBuYW1lOiAnY2xhc3MnLFxuICAgICAgbGFiZWw6ICdDbGFzcycsXG4gICAgICB3aWRnZXQ6ICdzdHJpbmcnLFxuICAgICAgZGVmYXVsdDonY29sdW1uJ1xuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ2NvbnRlbnQnLFxuICAgICAgbGFiZWw6ICdDb250ZW50JyxcbiAgICAgIHdpZGdldDogJ21hcmtkb3duJyxcbiAgICAgIGRlZmF1bHQ6J0xvcmVtIElwc3VtLi4uJ1xuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ2NsYXNzMicsXG4gICAgICBsYWJlbDogJ0NsYXNzMicsXG4gICAgICB3aWRnZXQ6ICdzdHJpbmcnLFxuICAgICAgZGVmYXVsdDonY29sdW1uJ1xuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ2NvbnRlbnQyJyxcbiAgICAgIGxhYmVsOiAnQ29udGVudDInLFxuICAgICAgd2lkZ2V0OiAnbWFya2Rvd24nLFxuICAgICAgZGVmYXVsdDonTG9yZW0gSXBzdW0uLi4nXG4gICAgfVxuICBdLFxuICAvLyBSZWdleCBwYXR0ZXJuIHVzZWQgdG8gc2VhcmNoIGZvciBpbnN0YW5jZXMgb2YgdGhpcyBibG9jayBpbiB0aGUgbWFya2Rvd24gZG9jdW1lbnQuXG4gIC8vIFBhdHRlcm5zIGFyZSBydW4gaW4gYSBtdWx0bGluZSBlbnZpcm9ubWVudCAoYWdhaW5zdCB0aGUgZW50aXJlIG1hcmtkb3duIGRvY3VtZW50KSxcbiAgLy8gYW5kIHNvIGdlbmVyYWxseSBzaG91bGQgbWFrZSB1c2Ugb2YgdGhlIG11bHRpbGluZSBmbGFnIChgbWApLiBJZiB5b3UgbmVlZCB0byBjYXB0dXJlXG4gIC8vIG5ld2xpbmVzIGluIHlvdXIgY2FwdHVyaW5nIGdyb3VwcywgeW91IGNhbiBlaXRoZXIgdXNlIHNvbWV0aGluZyBsaWtlXG4gIC8vIGAoW1xcU1xcc10qKWAsIG9yIHlvdSBjYW4gYWRkaXRpb25hbGx5IGVuYWJsZSB0aGUgXCJkb3QgYWxsXCIgZmxhZyAoYHNgKSxcbiAgLy8gd2hpY2ggd2lsbCBjYXVzZSBgKC4qKWAgdG8gbWF0Y2ggbmV3bGluZXMgYXMgd2VsbC5cbiAgLy9cbiAgLy8gQWRkaXRpb25hbGx5LCBpdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IHVzZSBub24tZ3JlZWR5IGNhcHR1cmluZyBncm91cHMgKGUuZy5cbiAgLy8gYCguKj8pYCB2cyBgKC4qKWApLCBlc3BlY2lhbGx5IGlmIG1hdGNoaW5nIGFnYWluc3QgbmV3bGluZSBjaGFyYWN0ZXJzLlxuICBwYXR0ZXJuOiAvXjxjb2x1bW5zPiRcXHMoLio/KTxcXC9jb2x1bW5zPlxcblxcbi9tcyxcbiAgLy8gR2l2ZW4gYSBSZWdFeHAgTWF0Y2ggb2JqZWN0XG4gIC8vIChodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvbWF0Y2gjcmV0dXJuX3ZhbHVlKSxcbiAgLy8gcmV0dXJuIGFuIG9iamVjdCB3aXRoIG9uZSBwcm9wZXJ0eSBmb3IgZWFjaCBmaWVsZCBkZWZpbmVkIGluIGBmaWVsZHNgLlxuICAvL1xuICAvLyBUaGlzIGlzIHVzZWQgdG8gcG9wdWxhdGUgdGhlIGN1c3RvbSB3aWRnZXQgaW4gdGhlIG1hcmtkb3duIGVkaXRvciBpbiB0aGUgQ01TLlxuICBmcm9tQmxvY2s6IGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzOiBtYXRjaFsxXSxcbiAgICAgIGNvbnRlbnQ6IG1hdGNoWzJdLFxuICAgICAgY2xhc3MyOiBtYXRjaFszXSxcbiAgICAgIGNvbnRlbnQyOiBtYXRjaFs0XVxuICAgIH07XG4gIH0sXG4gIC8vIEdpdmVuIGFuIG9iamVjdCB3aXRoIG9uZSBwcm9wZXJ0eSBmb3IgZWFjaCBmaWVsZCBkZWZpbmVkIGluIGBmaWVsZHNgLFxuICAvLyByZXR1cm4gdGhlIHN0cmluZyB5b3Ugd2lzaCB0byBiZSBpbnNlcnRlZCBpbnRvIHlvdXIgbWFya2Rvd24uXG4gIC8vXG4gIC8vIFRoaXMgaXMgdXNlZCB0byBzZXJpYWxpemUgdGhlIGRhdGEgZnJvbSB0aGUgY3VzdG9tIHdpZGdldCB0byB0aGVcbiAgLy8gbWFya2Rvd24gZG9jdW1lbnRcbiAgdG9CbG9jazogZnVuY3Rpb24oZGF0YSkge1xuICAgIHJldHVybiBgXG48Y29sdW1ucz5cbjxkaXYgY2xhc3M9XCIke2RhdGEuY2xhc3N9XCI+JHtkYXRhLmNvbnRlbnR9PC9kaXY+XG48ZGl2IGNsYXNzPVwiJHtkYXRhLmNsYXNzMn1cIj4ke2RhdGEuY29udGVudDJ9PC9kaXY+XG48L2NvbHVtbnM+XG5gO1xuICB9LFxuICAvLyBQcmV2aWV3IG91dHB1dCBmb3IgdGhpcyBjb21wb25lbnQuIENhbiBlaXRoZXIgYmUgYSBzdHJpbmcgb3IgYSBSZWFjdCBjb21wb25lbnRcbiAgLy8gKGNvbXBvbmVudCBnaXZlcyBiZXR0ZXIgcmVuZGVyIHBlcmZvcm1hbmNlKVxuICB0b1ByZXZpZXc6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICByZXR1cm4gYFxuPGNvbHVtbnM+XG4gIDxkaXYgY2xhc3M9XCIke2RhdGEuY2xhc3N9XCI+JHtkYXRhLmNvbnRlbnR9PC9kaXY+XG4gIDxkaXYgY2xhc3M9XCIke2RhdGEuY2xhc3MyfVwiPiR7ZGF0YS5jb250ZW50Mn08L2Rpdj5cbjwvY29sdW1ucz5cbmA7XG4gIH1cbn0pO1xuXG5cbmluaXQoeyBjb25maWcgfSlcbiJdLCJuYW1lcyI6WyJjb25maWciLCJiYWNrZW5kIiwibmFtZSIsImxvZ2luIiwibWVkaWFfZm9sZGVyIiwiY29sbGVjdGlvbnMiLCJsYWJlbCIsImZpbGVzIiwiZmlsZSIsImZpZWxkcyIsIndpZGdldCIsImVkaXRvcl9jb21wb25lbnRzIiwiQ01TIiwicmVnaXN0ZXJFZGl0b3JDb21wb25lbnQiLCJpZCIsImRlZmF1bHQiLCJwYXR0ZXJuIiwiZnJvbUJsb2NrIiwibWF0Y2giLCJjbGFzcyIsImNvbnRlbnQiLCJjbGFzczIiLCJjb250ZW50MiIsInRvQmxvY2siLCJkYXRhIiwidG9QcmV2aWV3Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./dev/index.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("369eac95460dc9085bbf")
/******/ })();
/******/ 
/******/ }
);